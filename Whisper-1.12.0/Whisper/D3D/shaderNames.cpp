// This source file is generated by a tool
#include "stdafx.h"
#include "shaderNames.h"

static const std::array<const char*, 41> s_shaderNames = 
{
	"add",
	"addInPlace",
	"addRepeat",
	"addRepeatEx",
	"addRepeatGelu",
	"addRepeatScale",
	"addRows",
	"convolutionMain",
	"convolutionMain2",
	"convolutionMain2Fixed",
	"convolutionPrep1",
	"convolutionPrep2",
	"copyConvert",
	"copyTranspose",
	"dbgFindNaN",
	"diagMaskInf",
	"flashAttention",
	"flashAttentionCompat1",
	"flashAttentionCompat2",
	"flashAttentionCompat3",
	"fmaRepeat1",
	"fmaRepeat2",
	"matReshapePanels",
	"mulMatByRow",
	"mulMatByRowTiled",
	"mulMatByRowTiledEx",
	"mulMatByScalar",
	"mulMatDotMain",
	"mulMatDotReshape",
	"mulMatMadMain",
	"mulMatTiled",
	"mulMatTiledEx",
	"norm",
	"normCompat",
	"normFixed",
	"scaleInPlace",
	"softMax",
	"softMaxCompat",
	"softMaxFixed",
	"softMaxLong",
	"zeroMemory",
};

const char* DirectCompute::computeShaderName( eComputeShader cs )
{
	const uint16_t i = (uint16_t)cs;
	if( i < s_shaderNames.size() )
		return s_shaderNames[ i ];
	return nullptr;
}